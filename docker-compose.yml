version: "3"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
#      KAFKA_CREATE_TOPICS: "UploadFile:1:1,GetFile:1:1,TrackUpload:1:1,GetEmailContent:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
  jaeger:
    image: jaegertracing/all-in-one:1.10
    ports: 
      - "5775:5775"
      - "6831:6831"
      - "6832:6832"
      - "5778:5778" 
      - "16686:16686" 
      - "14268:14268" 
      - "14250:14250" 
      - "9411:9411" 
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
  redis:
    image: redis
    ports:
      - "6379:6379"
  web:
    build:
      context: ./mc1
    restart: always
    command: python3 /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./mc1:/code/
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      SECRET_KEY: bigsecretkey
      DJANGO_CONFIGURATION: Develop
      DJANGO_SETTINGS_MODULE:
  web1:
    build:
      context: ./mc2
    restart: always
    command: python3 /code/manage.py runserver 0.0.0.0:8001
    volumes:
      - ./mc2:/code/
    ports:
      - "8001:8001"
    depends_on:
      - redis
    environment:
      SECRET_KEY: bigsecretkey
      DJANGO_CONFIGURATION: Develop
      DJANGO_SETTINGS_MODULE:
  web2:
    build:
      context: ./mc3
    restart: always
    command: python3 /code/manage.py runserver 0.0.0.0:8002
    volumes:
      - ./mc3:/code/
    ports:
      - "8002:8002"
    environment:
      SECRET_KEY: bigsecretkey
      DJANGO_CONFIGURATION: Develop
      DJANGO_SETTINGS_MODULE:
volumes:
  pgdata:
